<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="word-wrap"><sessioninfo id="dave-thinkpad-74126b32" start="1729717768083" dump="1729717768592"/><package name="org/davidmoten/text/utils"><class name="org/davidmoten/text/utils/CharSequenceReader" sourcefilename="CharSequenceReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkOpen" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasRemaining" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remaining" desc="()I" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/nio/CharBuffer;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="75"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="91"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ready" desc="()Z" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="106"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="111"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/StringBuilder2" sourcefilename="StringBuilder2.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CI)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="internalArray" desc="()[C" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charAt" desc="(I)C" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="39"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/davidmoten/text/utils/StringBuilder2;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSize" desc="(I)V" line="52"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newSize" desc="(I)I" line="58"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLength" desc="(I)V" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)V" line="70"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(II)V" line="76"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substring" desc="(II)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightTrim" desc="()Lorg/davidmoten/text/utils/StringBuilder2;" line="95"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="191"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/WordWrap" sourcefilename="WordWrap.java"><method name="from" desc="(Ljava/io/Reader;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClasspathUtf8" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClasspath" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="73"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/CharSequence;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromUtf8" desc="(Ljava/io/InputStream;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="110"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="124"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/Reader;Z)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="(Ljava/io/Reader;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSet" desc="(Ljava/lang/String;)Ljava/util/Set;" line="412"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wordWrap" desc="(Ljava/io/Reader;Ljava/io/Writer;Ljava/lang/String;Ljava/lang/Number;Ljava/util/function/Function;Ljava/util/Set;ZZ)V" line="423"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wordWrap" desc="(Ljava/io/Reader;Lorg/davidmoten/text/utils/LineConsumer;Ljava/lang/Number;Ljava/util/function/Function;Ljava/util/Set;ZZ)V" line="448"><counter type="INSTRUCTION" missed="10" covered="211"/><counter type="BRANCH" missed="3" covered="51"/><counter type="LINE" missed="3" covered="59"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concatRightTrim" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="538"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPunctuation" desc="(C)Z" line="542"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tooLong" desc="(Ljava/util/function/Function;Ljava/lang/CharSequence;D)Z" line="547"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightTrim" desc="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="552"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhitespace" desc="(Ljava/lang/CharSequence;)Z" line="568"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftTrim" desc="(Lorg/davidmoten/text/utils/StringBuilder2;)V" line="581"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftTrim" desc="(Ljava/lang/String;)Ljava/lang/String;" line="592"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWordToLine" desc="(Lorg/davidmoten/text/utils/StringBuilder2;Lorg/davidmoten/text/utils/StringBuilder2;)V" line="598"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeBrokenWord" desc="(Lorg/davidmoten/text/utils/LineConsumer;Lorg/davidmoten/text/utils/StringBuilder2;Z)V" line="606"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLine" desc="(Lorg/davidmoten/text/utils/LineConsumer;Lorg/davidmoten/text/utils/StringBuilder2;)V" line="624"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/CharSequence;)Ljava/lang/Number;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="521"/><counter type="BRANCH" missed="4" covered="82"/><counter type="LINE" missed="3" covered="126"/><counter type="COMPLEXITY" missed="3" covered="64"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/WordWrap$Builder$1" sourcefilename="WordWrap.java"><method name="&lt;init&gt;" desc="(Lorg/davidmoten/text/utils/WordWrap$Builder;[ZLjava/lang/StringBuilder;Ljava/util/List;)V" line="309"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="313"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeNewLine" desc="()V" line="319"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/CharSequenceConcatRightTrim" sourcefilename="CharSequenceConcatRightTrim.java"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="15"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charAt" desc="(I)C" line="24"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/WordWrap$1" sourcefilename="WordWrap.java"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/lang/String;)V" line="423"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;)V" line="427"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="432"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeNewLine" desc="()V" line="437"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/LineConsumer" sourcefilename="LineConsumer.java"><method name="write" desc="(Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/CharSequenceConcatRightTrim$1" sourcefilename="CharSequenceConcatRightTrim.java"><method name="&lt;init&gt;" desc="(Lorg/davidmoten/text/utils/CharSequenceConcatRightTrim;II)V" line="33"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charAt" desc="(I)C" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="48"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/WordWrap$Builder" sourcefilename="WordWrap.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Z)V" line="144"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxWidth" desc="(Ljava/lang/Number;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="168"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringWidth" desc="(Ljava/util/function/Function;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="183"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newLine" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="195"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extraWordChars" desc="(Ljava/util/Set;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extraWordChars" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="221"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="includeExtraWordChars" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="232"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludeExtraWordChars" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="245"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepareExtraWordCharsForMutation" desc="()V" line="256"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertHyphens" desc="(Z)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="269"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breakWords" desc="(Z)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="282"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/io/Writer;)V" line="294"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapToList" desc="()Ljava/util/List;" line="306"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Lorg/davidmoten/text/utils/LineConsumer;)V" line="332"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)V" line="351"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapUtf8" desc="(Ljava/io/File;)V" line="365"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapUtf8" desc="(Ljava/lang/String;)V" line="375"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)V" line="386"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="()Ljava/lang/String;" line="396"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="242"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="0" covered="24"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/IORuntimeException" sourcefilename="IORuntimeException.java"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CharSequenceReader.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="2"/><line nr="62" mi="0" ci="13" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="16" mb="0" cb="2"/><line nr="75" mi="0" ci="10" mb="0" cb="6"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="15" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringBuilder2.java"><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="7" mb="0" cb="2"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="191"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineConsumer.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WordWrap.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="14" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="2"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="16" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="2"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="24" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="7" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="2"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="14" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="2"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="11" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="8" mb="0" cb="2"/><line nr="414" mi="0" ci="7" mb="0" cb="0"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="0" ci="15" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="0" ci="6" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="5" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="8" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="0" ci="2" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="2"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="12" mb="0" cb="4"/><line nr="462" mi="0" ci="3" mb="0" cb="2"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="5" mb="0" cb="2"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="2"/><line nr="468" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="2"/><line nr="476" mi="0" ci="4" mb="0" cb="4"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="5" mb="0" cb="4"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="481" mi="0" ci="5" mb="0" cb="2"/><line nr="482" mi="0" ci="3" mb="0" cb="2"/><line nr="483" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="0" ci="2" mb="0" cb="0"/><line nr="485" mi="0" ci="5" mb="1" cb="1"/><line nr="486" mi="2" ci="0" mb="2" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="489" mi="3" ci="0" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="2"/><line nr="496" mi="0" ci="5" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="6" mb="0" cb="4"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="2"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="5" mb="0" cb="2"/><line nr="511" mi="0" ci="3" mb="0" cb="2"/><line nr="512" mi="0" ci="4" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="12" mb="0" cb="4"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="2"/><line nr="522" mi="0" ci="11" mb="0" cb="0"/><line nr="523" mi="0" ci="2" mb="0" cb="2"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="528" mi="0" ci="2" mb="0" cb="2"/><line nr="529" mi="0" ci="2" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="2"/><line nr="532" mi="0" ci="7" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="538" mi="0" ci="6" mb="0" cb="0"/><line nr="542" mi="0" ci="9" mb="0" cb="2"/><line nr="547" mi="0" ci="12" mb="0" cb="2"/><line nr="552" mi="0" ci="3" mb="0" cb="0"/><line nr="553" mi="0" ci="2" mb="0" cb="2"/><line nr="554" mi="0" ci="7" mb="0" cb="2"/><line nr="555" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="2"/><line nr="561" mi="0" ci="5" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="568" mi="0" ci="8" mb="0" cb="2"/><line nr="569" mi="0" ci="5" mb="0" cb="2"/><line nr="570" mi="0" ci="2" mb="0" cb="0"/><line nr="573" mi="0" ci="2" mb="0" cb="0"/><line nr="581" mi="0" ci="8" mb="0" cb="2"/><line nr="582" mi="0" ci="5" mb="0" cb="2"/><line nr="583" mi="0" ci="1" mb="0" cb="0"/><line nr="586" mi="0" ci="6" mb="0" cb="4"/><line nr="587" mi="0" ci="4" mb="0" cb="0"/><line nr="589" mi="0" ci="1" mb="0" cb="0"/><line nr="592" mi="0" ci="5" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="3" mb="0" cb="0"/><line nr="600" mi="0" ci="1" mb="0" cb="0"/><line nr="606" mi="0" ci="9" mb="1" cb="3"/><line nr="607" mi="0" ci="8" mb="0" cb="2"/><line nr="608" mi="0" ci="3" mb="0" cb="0"/><line nr="609" mi="0" ci="3" mb="0" cb="0"/><line nr="610" mi="0" ci="2" mb="0" cb="0"/><line nr="611" mi="0" ci="8" mb="0" cb="0"/><line nr="613" mi="0" ci="8" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="2"/><line nr="615" mi="0" ci="3" mb="0" cb="0"/><line nr="617" mi="0" ci="2" mb="0" cb="0"/><line nr="618" mi="0" ci="7" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="624" mi="0" ci="7" mb="0" cb="0"/><line nr="625" mi="0" ci="2" mb="0" cb="0"/><line nr="626" mi="0" ci="3" mb="0" cb="0"/><line nr="627" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="835"/><counter type="BRANCH" missed="4" covered="92"/><counter type="LINE" missed="3" covered="206"/><counter type="COMPLEXITY" missed="3" covered="95"/><counter type="METHOD" missed="0" covered="50"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="IORuntimeException.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharSequenceConcatRightTrim.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="10" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="4"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="2"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="19" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="10" covered="1387"/><counter type="BRANCH" missed="4" covered="136"/><counter type="LINE" missed="3" covered="327"/><counter type="COMPLEXITY" missed="3" covered="158"/><counter type="METHOD" missed="0" covered="91"/><counter type="CLASS" missed="0" covered="10"/></package><counter type="INSTRUCTION" missed="10" covered="1387"/><counter type="BRANCH" missed="4" covered="136"/><counter type="LINE" missed="3" covered="327"/><counter type="COMPLEXITY" missed="3" covered="158"/><counter type="METHOD" missed="0" covered="91"/><counter type="CLASS" missed="0" covered="10"/></report>